"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-kdrckn(^2qxbapa+-la2@n)lme7e*r%9fygtuq@ayj(3oj*nsz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["yourdomain.com", "www.yourdomain.com", "localhost"]


SECURE_BROWSER_XSS_FILTER = True # enable XSS filter in modern browsers 
X_FRAME_OPTIONS = "DENY" # disallow iframe embedding (prevent clickjacking)
SECURE_CONTENT_TYPE_NOSNIFF = True # prevents content type sniffing



#Cookies: ensure they're only sent over HTTPS (production) 
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True 
SESSION_COOKIE_HTTPONLY = True 
CSRF_COOKIE_HTTPONLY = False # usually False; adjust if you have a reason to make it HttpOnly

#HSTS - only enable after you have HTTPS and know what you're doing 
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True 
SECURE_HSTS_PRELOAD = False # set True only if you understand preload implications

#SSL redirect (enable only if you actually have HTTPS) 
SECURE_SSL_REDIRECT = True

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'relationship_app',
    'bookshelf',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = "bookshelf.CustomUser"


#Content Security Policy (option A: using django-csp) 
# (Install django-csp in production: pip install django-csp) 
INSTALLED_APPS += [ 
    # ... other apps ...
     "csp", # add this only if you install django-csp 
     ]

MIDDLEWARE = [ # ... existing middleware ... 
    "csp.middleware.CSPMiddleware", # put near top
      # ... other middleware ...
     ]


# Basic CSP example â€” tighten these values to match your asset hosts 
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = ("'self'",) # add cdn domains if using them 
CSP_STYLE_SRC = ("'self'", "'unsafe-inline'") # avoid 'unsafe-inline' if possible
CSP_IMG_SRC = ("'self'", "data:")
CSP_FONT_SRC = ("'self'",) 
CSP_CONNECT_SRC = ("'self'",) 
CSP_BASE_URI = ("'self'",) 
CSP_FRAME_ANCESTORS = ("'none'",)

